c
@message.body
@message.channel
@message.author.username
@message.author
@message
c
params
c
params
c
params
c
params
c
params
c
params
c
params
c
params
c
params
c
@num_online[@channels[0]]
@num_online
@channels
@channel
c
@num_online
@channels
c
@channels
@channel
c
@channel
c
@channel
@num_channel
c
@num_channel
@channel
c
user.online
current_user
user
@channel
c
@channel
c
@channel
c
@channel
c
@channel
c
@channel
c
@channel
c
channel
c
@channels
c
@channels
c
@channels
c
@channels
c
@channels
c
user.online.online
user.online
user
current_user
c
user
c
current_user
c
current_user
@channel
c
@channel
c
@channel
c
@channel
c
@channels
channels
c
channels
c
@channels
c
cc
c
cc
c
cc
c
cc
c
user.online
user
c
user.online
user
c
cc
c
user.online
user.online.online
user
c
cc
c
user.online.online
user.online
user
c
@channels
c
current_user.channels.first.users.first.online
current_user.channels.first.users.first.online.online
current_user.channels.first.users.online.online
current_user.channels.first.users.online
current_user.channels.first.users
current_user.channels
current_user
current_us
c
@current_user
current_user
current_usr
current_user
params
user
c
Channel.online_user_channel("g")
continue
Channel.online_user_channel("g")
Channel.online_user_channel(params["g"])
c
Channel.online_user_channel(params["g"])
Channel.online_user_channel(params[:username])
/q
continue
c
cc
c
cc
c
cc
c
self.session_token
c
self.session_token
c
dxzs84IddSnw99wH9fbOQQc
@user
c
User.find_by(username: params[:username])
@user
c
User.find_by(username: params[:username])
c
        ) AS online_users ON users.username = online_users.username
            AND users.username <> ?
          WHERE
            users
          FROM
            users.username
          SELECT
        JOIN (
          users ON users.id = channel_subscriptions.user_id
        JOIN
          channel_subscriptions ON channels.id = channel_subscriptions.channel_id
        JOIN
          channels
        FROM
          channels.title, channels.id, users.username
        SELECT
    Channel.find_by_sql([<<-SQL, username])
Channel.online_user_channel("p")
c
Channel.online_user_channel("p")
c
Channel.online_user_channel("p")
c
Channel.online_user_channel("p")
c
Channel.online_user_channel("p")
c
Channel.online_user_channel("p")
c
Channel.online_user_channel("phi")
Channel.online_user_channel(params[:username])
c
Channel.online_user_channel(params[:username])
params[:username]
params
c
@user
c
params
@user
c
name
anme
channel.users
user
channel
c
channel.users.include?(user)
channel.users.includes?(user)
name
channel.title.split(",")
channel.users
channel
User.find_by(username: name)
name
channel.users.includes?(user)
c
Channel.find_by(title: message_params[:channelName]).users.include?(User.find_by(username: "guest"))
!Channel.find_by(title: message_params[:channelName]).users.include?(User.find_by(username: "guest"))
Channel.find_by(title: message_params[:channelName]).users.usernames
Channel.find_by(title: message_params[:channelName]).users.username
Channel.find_by(title: message_params[:channelName]).users.include?(User.find_by(username: "guest"))
Channel.find_by(title: message_params[:channelName]).users.include?("hello")
Channel.find_by(title: message_params[:channelName]).users
Channel.find_by(title: message_params[:channelName]).title.split(",")
Channel.find_by(title: message_params[:channelName]).title.split
Channel.find_by(title: message_params[:channelName]).title
Channel.find_by(title: message_params[:channelName])
c
Channel.find_by(title: message_params[:channelName])c
Channel.find_by(title: message_params[:channelName]).title
Channel.find_by(title: message_params[:channelName]).users
Channel.find_by(title: message_params[:channelName])
channel_id
c
@notifications
notification
User.find(params[:userId]).notifications.first.channel_name
User.find(params[:userId]).notifications.first
User.find(params[:userId]).notifications
params
@notification
c
@notification
c
User.find(params[:userId]).notifications.first.channel_namec
